package com.cos.security1.config;

/*
< 다형성 Polymorphism >

# 개념
- 객체 지향 프로그래밍에서, 한 객체가 여러 데이터타입을 가질 수 있는 능력을 의미함.
- 상속과 인터페이스를 활용하여 구현됨.
- @Overriding과 밀접하게 연관되어 있음

# 장점
- 코드의 재사용성을 높여줌.
  한 객체가 다양한 데이터타입 형태로 사용될 수 있으므로, 동일한 코드를 반복해서 작성할 필요가 없음.
- 코드의 유연성과 확장성을 제공함.
  새로운 클래스나 인터페이스를 추가함으로써, 기존 코드에 영향을 주지 않고 새로운 동작을 추가할 수 있음.
- 가독성을 향상시킴.
  다형성을 사용하면, 동일한 (최상위 부모클래스 또는 부모인터페이스의)데이터타입으로 다양한 (하위 자식클래스) 객체들을
  다룰 수 있으므로, 코드가 간결해지고 이해하기 쉬워짐.
 */


public class Polymorphism {
}
